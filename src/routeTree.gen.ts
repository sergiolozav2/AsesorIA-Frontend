/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminProductsImport } from './routes/admin/products'
import { Route as AdminMetricsImport } from './routes/admin/metrics'
import { Route as AdminHomeImport } from './routes/admin/home'
import { Route as AdminEventsImport } from './routes/admin/events'
import { Route as AdminClientsImport } from './routes/admin/clients'
import { Route as AdminChatbotImport } from './routes/admin/chatbot'
import { Route as AdminChatRouteImport } from './routes/admin/chat/route'
import { Route as AdminChatIndexImport } from './routes/admin/chat/index'
import { Route as AdminChatSettingsImport } from './routes/admin/chat/settings'
import { Route as AdminChatMessagesImport } from './routes/admin/chat/messages'
import { Route as AdminChatChannelsImport } from './routes/admin/chat/channels'

// Create Virtual Routes

const PublicLazyImport = createFileRoute('/_public')()
const AuthLazyImport = createFileRoute('/_auth')()
const IndexLazyImport = createFileRoute('/')()
const AuthRegisterLazyImport = createFileRoute('/_auth/register')()
const AuthLoginLazyImport = createFileRoute('/_auth/login')()

// Create/Update Routes

const PublicLazyRoute = PublicLazyImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_public.lazy').then((d) => d.Route))

const AuthLazyRoute = AuthLazyImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_auth.lazy').then((d) => d.Route))

const AdminRouteRoute = AdminRouteImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AdminIndexRoute = AdminIndexImport.update({
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() =>
  import('./routes/_auth.register.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => AuthLazyRoute,
} as any).lazy(() => import('./routes/_auth.login.lazy').then((d) => d.Route))

const AdminProductsRoute = AdminProductsImport.update({
  path: '/products',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminMetricsRoute = AdminMetricsImport.update({
  path: '/metrics',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminHomeRoute = AdminHomeImport.update({
  path: '/home',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminEventsRoute = AdminEventsImport.update({
  path: '/events',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminClientsRoute = AdminClientsImport.update({
  path: '/clients',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminChatbotRoute = AdminChatbotImport.update({
  path: '/chatbot',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminChatRouteRoute = AdminChatRouteImport.update({
  path: '/chat',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminChatIndexRoute = AdminChatIndexImport.update({
  path: '/',
  getParentRoute: () => AdminChatRouteRoute,
} as any)

const AdminChatSettingsRoute = AdminChatSettingsImport.update({
  path: '/settings',
  getParentRoute: () => AdminChatRouteRoute,
} as any)

const AdminChatMessagesRoute = AdminChatMessagesImport.update({
  path: '/messages',
  getParentRoute: () => AdminChatRouteRoute,
} as any)

const AdminChatChannelsRoute = AdminChatChannelsImport.update({
  path: '/channels',
  getParentRoute: () => AdminChatRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      preLoaderRoute: typeof PublicLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/chat': {
      preLoaderRoute: typeof AdminChatRouteImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/chatbot': {
      preLoaderRoute: typeof AdminChatbotImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/clients': {
      preLoaderRoute: typeof AdminClientsImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/events': {
      preLoaderRoute: typeof AdminEventsImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/home': {
      preLoaderRoute: typeof AdminHomeImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/metrics': {
      preLoaderRoute: typeof AdminMetricsImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/products': {
      preLoaderRoute: typeof AdminProductsImport
      parentRoute: typeof AdminRouteImport
    }
    '/_auth/login': {
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/_auth/register': {
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof AuthLazyImport
    }
    '/admin/': {
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/chat/channels': {
      preLoaderRoute: typeof AdminChatChannelsImport
      parentRoute: typeof AdminChatRouteImport
    }
    '/admin/chat/messages': {
      preLoaderRoute: typeof AdminChatMessagesImport
      parentRoute: typeof AdminChatRouteImport
    }
    '/admin/chat/settings': {
      preLoaderRoute: typeof AdminChatSettingsImport
      parentRoute: typeof AdminChatRouteImport
    }
    '/admin/chat/': {
      preLoaderRoute: typeof AdminChatIndexImport
      parentRoute: typeof AdminChatRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AdminRouteRoute.addChildren([
    AdminChatRouteRoute.addChildren([
      AdminChatChannelsRoute,
      AdminChatMessagesRoute,
      AdminChatSettingsRoute,
      AdminChatIndexRoute,
    ]),
    AdminChatbotRoute,
    AdminClientsRoute,
    AdminEventsRoute,
    AdminHomeRoute,
    AdminMetricsRoute,
    AdminProductsRoute,
    AdminIndexRoute,
  ]),
  AuthLazyRoute.addChildren([AuthLoginLazyRoute, AuthRegisterLazyRoute]),
])

/* prettier-ignore-end */
